%Compute area of mitral valve from scatterpoints of annulus
%Author: Anders Tasken
%Started 19.02.2021
function MitralValveAreaComputation(fileNames, cardiac_view)

    %call the MAPSE postprocessing script for each file
    for f=1:size(fileNames,2)
        %root name from h5 file
        [filesPath, name, ~] = fileparts(fileNames(f).name);

        %show progress
        fprintf('Loaded file with name: %s. \n', name);

        %load optMapseAngles
        filename = strcat(filesPath, 'Optimal_angle_mv-center-computation/', name, '/optMapseAngle.mat');
        optMapseAngle = load(filename, 'optMapseAngle').optMapseAngle;

        %skip iteration if optimal angle is 0 (most likely due to no landmarks)
        if optMapseAngle == 0
            fprintf('Optimal mapse angle is 0, skipping iteration with file %s \n', name);
            continue
        end
        
        % Load landmark variable matrices
        variablesFilename = strcat(filesPath, 'LandmarkMatricesVariables/landmarkMatrices_', cardiac_view, '_', name);
        
        load(variablesFilename,...
            'leftLandmarkSplineCurve', 'rightLandmarkSplineCurve', 'annotatedLeftSplineCurve', 'annotatedRightSplineCurve',...
            'leftLandmarkBezierCurve', 'rightLandmarkBezierCurve', 'annotatedLeftBezierCurve', 'annotatedRightBezierCurve',...
            'landmarkLeft3DMatrix', 'landmarkRight3DMatrix', 'annotatedLeft3DMatrix', 'annotatedRight3DMatrix',...
            'rejectedLandmarkLeft3DMatrix', 'rejectedLandmarkRight3DMatrix', ...
            'landmarkMean3DMatrix', 'meanSplineCurve', 'meanBezierCurve');

        % Frame used to render single annnulus plot
        frame = 1;
        
        %{
        %plot surface of valve
        figure;
        p_h=plot3(landmarkLeft3DMatrix(1,:,frame),landmarkLeft3DMatrix(2,:,frame),landmarkLeft3DMatrix(3,:,frame),'o');
        hold on
        tmp = landmarkLeft3DMatrix(:,~isnan(landmarkLeft3DMatrix(1,:,frame)));
        %tri=delaunay(tmp(1,:,frame),tmp(2,:,frame))
        %trisurf(tri,tmp(1,:,frame),tmp(2,:,frame),tmp(3,:,frame))
        rangeX=floor(min(tmp(1,:,frame))):1.0:ceil(max(tmp(1,:,frame)));
        rangeY=floor(min(tmp(2,:,frame))):1.0:ceil(max(tmp(2,:,frame)));
        [X,Y]=meshgrid(rangeX,rangeY);
        Z = griddata(tmp(1,:,frame),tmp(2,:,frame),tmp(3,:,frame),X,Y,'cubic');
        h = surf(X,Y,Z);
        surfarea(h)
        %}
        %plot surface of valve 2.0
        figure;
        tri = delaunay(tmp(1,:,frame),tmp(2,:,frame));
        h = trisurf(tri, tmp(1,:,frame), tmp(2,:,frame), tmp(3,:,frame));
        surfarea(h)
        
    end
end